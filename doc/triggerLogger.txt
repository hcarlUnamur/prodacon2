Attention, on ne peut pas créer une table directement dans un trigger car cela génère un commit implicite et aucun commmit n'est accepté dans un trigger dans mysql. De ce fait il faudra faire un create if not exist tableLog avant l'ajout d'un trigger mais de manière séparée de ce trigger.

create table IF NOT EXISTS tableTriggerLog (
    foreignKeyName varchar(100) NOT NULL,
    foreignKeyTable varchar(100) NOT NULL,
    foreignKeyColumn varchar(100) NOT NULL,
    referencedTable varchar(100) NOT NULL,
    referencedColumn varchar(100) NOT NULL,
    problemAction varchar(40) NOT NULL,
    dateAndTime timeStamp NOT NULL DEFAULT now()
);

/*
	TRIGGER INSERT
*/

DELIMITER $$

CREATE TRIGGER triggerInsert  
BEFORE INSERT ON testtable1  
FOR EACH ROW  
BEGIN  
  IF not (new.sourceId IN (SELECT destinationId from tableDestination)) 
THEN

    INSERT INTO tableTriggerLog (foreignKeyName, foreignKeyTable, foreignKeyColumn, referencedTable, referencedColumn, problemAction) values("foreignKayName", "foreignKeyTable", "foreignKeyColumn", "referencedTable", "referencedColumn", "insert");
END IF;
END $$

DELIMITER ;

/*
	TRIGGER DELETE
*/

DELIMITER $$

CREATE TRIGGER triggerDelete 
BEFORE delete ON tableDestination  
FOR EACH ROW  
BEGIN  
  IF (old.destinationId IN (SELECT sourceId from tableSource)) 
THEN  
    INSERT INTO tableTriggerLog (foreignKeyName, foreignKeyTable, foreignKeyColumn, referencedTable, referencedColumn, problemAction) values("foreignKayName", "foreignKeyTable", "foreignKeyColumn", "referencedTable", "referencedColumn", "delete");
END IF;
END $$

DELIMITER ;

/*
	TRIGGER UPDATE FOREIGNKEY TABLE
*/

DELIMITER $$

CREATE TRIGGER triggerUpdate
  BEFORE UPDATE ON tableSource
  FOR EACH ROW
BEGIN 
  IF((old.sourceId <> new.sourceId) AND not (new.sourceId IN (SELECT destinationId from tableDestination))) 
THEN  
    INSERT INTO tableTriggerLog (foreignKeyName, foreignKeyTable, foreignKeyColumn, referencedTable, referencedColumn, problemAction) values("foreignKayName", "foreignKeyTable", "foreignKeyColumn", "referencedTable", "referencedColumn", "updateForeignkeyTable");
END IF;
END $$

DELIMITER ;

/*
	TRIGGER UPDATE REFERENCED TABLE
*/

DELIMITER $$

CREATE TRIGGER triggerUpdate
  BEFORE UPDATE ON tableDestination
  FOR EACH ROW
BEGIN 
  IF((old.destinationId <> new.destinationId) AND (old.destinationId IN (SELECT sourceId from tableSource))) 
THEN  
    INSERT INTO tableTriggerLog (foreignKeyName, foreignKeyTable, foreignKeyColumn, referencedTable, referencedColumn, problemAction) values("foreignKayName", "foreignKeyTable", "foreignKeyColumn", "referencedTable", "referencedColumn", "updateReferencedTable");
END IF;
END $$

DELIMITER ;

